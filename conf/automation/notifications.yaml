###
### 21.06.2023
###

  - alias: notifications_open_doors_and_windows
    id: notifications_open_doors_and_windows
    triggers:
        trigger: state
        entity_id: media_player.sony_kd_55ag9
        to: "on"
        for:
            minutes: "{{ states ( 'input_number.notification_tv_on_delay' ) | int }}"
    conditions:
    variables:
        msg: |-
            {% set ns = namespace ( msg1 = '', msg2 = '' ) %}
            {% for state in states.binary_sensor 
               | selectattr ( 'attributes.device_class', 'defined' ) 
               | selectattr ( 'attributes.device_class', 'eq', 'window' )
            %}
              {% if state.state == 'on' %}
                {% if ns.msg1 == '' %}
                  {% set ns.msg1 = state.attributes.friendly_name %}
                {% else %}
                  {% set ns.msg1 = ns.msg1 + ', ' + state.attributes.friendly_name %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {% if ns.msg1 != '' %}
              {% set ns.msg1 = 'Offene Fenster: ' + ns.msg1 + " | " %}
            {% endif %}
            {% for state in states.binary_sensor 
               | selectattr ( 'attributes.device_class', 'defined' ) 
               | selectattr ( 'attributes.device_class', 'eq', 'door' )
            %}
              {% if state.state == 'on' %}
                {% if ns.msg2 == '' %}
                  {% set ns.msg2 = state.attributes.friendly_name %}
                {% else %}
                  {% set ns.msg2 = ns.msg2 + ', ' + state.attributes.friendly_name %}
                {% endif %}
              {% endif %}
            {% endfor %}
            {% if ns.msg2 != '' %}
              {% set ns.msg2 = '\nOffene Türen: ' + ns.msg2 %}
            {% endif %}
            {{ ns.msg1 }}
            {{ ns.msg2 }}
    actions:
      - action: script.notify
        data:
            domain: open_doors_and_windows
            message: "{{ msg }}"

# template  getting all nodestate entities
# - {{ states.binary_sensor | selectattr ( 'entity_id', 'search', 'nodestate_' ) | map ( attribute = 'entity_id' ) | list | join ( '\n- ' ) }}

  - alias: notifications_nodestate
    id: notifications_nodestate
    mode: queued
    triggers:
      - trigger: state
        alias: When any nodestate changes
        entity_id:
          - binary_sensor.nodestate_dht22_lounge
          - binary_sensor.nodestate_dht22_terrace
          - binary_sensor.nodestate_dht22_roof
          - binary_sensor.nodestate_relay_garage
          - binary_sensor.nodestate_sonoff_bedroom
          - binary_sensor.nodestate_ttp223_bedroom
          - binary_sensor.nodestate_led_kitchen
          - binary_sensor.nodestate_led_kitchen2
          - binary_sensor.nodestate_gesture_kitchen
          - binary_sensor.nodestate_sonoff_gallery1
          - binary_sensor.nodestate_sonoff_corridor
          - binary_sensor.nodestate_electricity_utilityroom
          - binary_sensor.nodestate_pixel_kitchen
          - binary_sensor.nodestate_ds18b20_groundfloor
          - binary_sensor.nodestate_ds18b20_firstfloor
          - binary_sensor.nodestate_gas_utilityroom
          - binary_sensor.nodestate_led_corridor
          - binary_sensor.nodestate_rain_garden
          - binary_sensor.nodestate_dht11_utilityroom
          - binary_sensor.nodestate_ds18b20_pool
          - binary_sensor.nodestate_ds18b20_brewery
          - binary_sensor.nodestate_spindle_fermenter
          - binary_sensor.nodestate_xmastree_dining
          - binary_sensor.nodestate_relay_garden
          - binary_sensor.nodestate_ws2812_terrace1
          - binary_sensor.nodestate_ws2812_terrace2
          - binary_sensor.nodestate_ws2812_xmasstar
          - binary_sensor.nodestate_relay_hydrotower
          - binary_sensor.nodestate_ws2812_x1c
          - binary_sensor.nodestate_pitouch_corridor
          - binary_sensor.nodestate_tasmota
          - binary_sensor.nodestate_ems_esp
          - binary_sensor.nodestate_watermeter
        to: "off"
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
    actions:
      - action: script.notify
        data:
            domain: nodestate
            message: "{{ trigger.entity_id [24:] }} is not alive"

  - alias: notifications_garage_flood
    id: notifications_garage_flood
    triggers:
      - trigger: state
        entity_id: binary_sensor.wassermelder
        to: "on"
    conditions:
    actions:
      - action: script.notify
        data:
            domain: "flood"
            message: "Überschwemmung erkannt"

  - alias: notifications_mower_error
    id: notifications_mower_error
    triggers:
      - trigger: state
        entity_id: lawn_mower.sileno
        to:
          - error
          - unavailable
          - unknown
    conditions:
    actions:
      - action: script.notify
        data:
            domain: "mower"
            message: "Rasenmäher Fehler: {{ trigger.to_state.state }}"

  - alias: notifications_battery_low
    id: notifications_battery_low
    triggers:
      - trigger: state
        entity_id: group.batteries
        to: "on"
    conditions:
    variables:
        battery: "{{ expand ( 'group.batteries' ) | selectattr ( 'state', 'eq', 'on' ) | map ( attribute = 'attributes.friendly_name' ) | map('regex_replace', '^(\\S+)\\s(\\S+).*', '\\1 \\2') | list | join ( ', ' ) }}"
    actions:
      - action: script.notify
        data:
            domain: "battery"
            message: "Niedriger Batteriestand: {{ battery }}"

  - alias: notifications_kia_ev6_warning
    id: notifications_kia_ev6_warning
    triggers:
      - trigger: state
        entity_id: group.ev6
        to: "on"
    conditions:
    variables:
        warning: "{{ expand ( 'group.ev6' ) | selectattr ( 'state', 'eq', 'off' ) | map ( attribute = 'attributes.friendly_name' ) | map('regex_replace', '^(\\S+\\s)(.*)', '\\2' ) | list | join ( ', ' ) }}"
    actions:
      - action: script.notify
        data:
            domain: "kia_ev6"
            message: "Kia EV6 Warnung: {{ warning }}"
