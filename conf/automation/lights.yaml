###
### 22.08.2019 split up
###

  - alias: lights_send_effect_delay
    id: lights_send_effect_delay
    triggers:
        trigger: state
        entity_id: input_number.effect_delay
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
    actions:
      # TODO refactor to use repeat loop
      - action: mqtt.publish
        data:
            topic: nodes@home/light/ws2812/terrace1/service/set
            payload: '{"delay":{{ trigger.to_state.state | int }}}'
            qos: 0
            retain: false
      - action: mqtt.publish
        data:
            topic: nodes@home/light/ws2812/terrace2/service/set
            payload: '{"delay":{{ trigger.to_state.state | int }}}'
            qos: 0
            retain: false
      - action: mqtt.publish
        data:
            topic: nodes@home/light/ws2812/office/service/set
            payload: '{"delay":{{ trigger.to_state.state | int }}}'
            qos: 0
            retain: false

  - alias: lights_indoor_on_at_coming_home_or_sunset
    id: lights_indoor_on_at_coming_home_or_sunset
    triggers:
      - trigger: state
        entity_id: group.family
        to: 'home'
      - trigger: sun
        event: sunset
        offset: "00:00:00"
      - trigger: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Licht an'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
      - condition: sun
        after: sunset
        after_offset: "00:00:00"
      - condition: time
        before: input_datetime.sleep
      - condition: or
        conditions:
          - condition: state
            entity_id: group.family
            state: 'home'
          - condition: state
            entity_id: input_boolean.light_simulation
            state: "on"
    actions:
      - action: homeassistant.turn_on
        target:
          entity_id:
              - light.automatic_indoor_lights_immediatly_switched_off
              - light.automatic_indoor_lights_delayed_switched_off

  - alias: lights_indoor_by_night_on_at_coming_home
    id: lights_indoor_by_night_on_at_coming_home
    triggers:
      - trigger: state
        entity_id: group.family
        to: 'home'
      - trigger: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Licht an'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
      - condition: sun
        after: sunset
        after_offset: "00:00:00"
      - condition: time
        after: input_datetime.sleep
        before: input_datetime.nightlight_end
      - condition: state
        entity_id: group.family
        state: 'home'
    actions:
      - action: homeassistant.turn_on
        target:
            entity_id: light.automatic_indoor_lights_by_night
      - delay:
            minutes: "{{ states ( 'input_number.nightlight_duration' ) | int }}"
      - action: homeassistant.turn_off
        target:
            entity_id: light.automatic_indoor_lights_by_night

  - alias: lights_indoor_off_at_getting_out_or_sunrise
    id: lights_indoor_off_at_getting_out_or_sunrise
    triggers:
      - trigger: state
        entity_id: group.family
        to: 'not_home'
        for:
            minutes: 1
      - trigger: sun
        event: sunrise
        offset: "+00:00:00"
      - trigger: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Licht aus'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
    actions:
      - action: scene.turn_on
        target:
            entity_id: scene.kitchen_background_light
      - service: homeassistant.turn_off
        target:
            entity_id:
              - light.automatic_indoor_lights_immediatly_switched_off
              - light.automatic_indoor_lights_delayed_switched_off
              - light.automatic_indoor_lights_immediatly_switched_off_extra
              - light.automatic_indoor_lights_delayed_switched_off_extra
              - light.automatic_indoor_lights_sunrise_switched_off_extra

  - alias: lights_indoor_off_when_tv_switched_off
    id: lights_indoor_off_when_tv_switched_off
    triggers:
        trigger: state
        entity_id: remote.sony_kd_55ag9
        from: "on"
        to: "off"
        for:
            minutes: 1
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
      - condition: time
        after: input_datetime.tv_off_period_start
        before: input_datetime.tv_off_period_end
    actions:
      - delay:
            minutes: "{{ states ( 'input_number.tvoff_lightsoff_delay1' ) | int - 1 }}"
      - action: scene.turn_on
        target:
            entity_id: scene.kitchen_background_light
      - action: homeassistant.turn_off
        target:
            entity_id:
              - light.automatic_indoor_lights_immediatly_switched_off
              - light.automatic_indoor_lights_immediatly_switched_off_extra
      - delay:
            minutes: "{{ ( states ( 'input_number.tvoff_lightsoff_delay2' ) | int - states ( 'input_number.tvoff_lightsoff_delay1' ) | int ) }}"
      - action: homeassistant.turn_off
        target:
            entity_id:
              - light.automatic_indoor_lights_delayed_switched_off
              - light.automatic_indoor_lights_delayed_switched_off_extra
              - switch.fernseher

  - alias: lights_indoor_off_after_random_delay
    id: lights_indoor_off_after_random_delay
    triggers:
      - trigger: time
        at: input_datetime.sleep
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
      - condition: state
        entity_id: input_boolean.light_simulation
        state: "on"
    actions:
      # switch off between 22:00 amd 24:00
      - delay:
            minutes: "{{ range ( 0,  states ( 'input_number.max_random_off_duration' ) | int ) | random | int }}"
      - action: scene.turn_on
        target:
            entity_id: scene.kitchen_background_light
      - action: homeassistant.turn_off
        target:
            entity_id:
              - light.automatic_indoor_lights_immediatly_switched_off
              - light.automatic_indoor_lights_delayed_switched_off
              - light.automatic_indoor_lights_immediatly_switched_off_extra
              - light.automatic_indoor_lights_delayed_switched_off_extra

  - alias: lights_indoor_simulation_off_at_coming_home
    id: lights_indoor_simulation_off_at_coming_home
    triggers:
      - trigger: state
        entity_id: group.family
        to: 'home'
    conditions:
      - condition: state
        entity_id: input_boolean.light_simulation
        state: "on"
    actions:
      - action: input_boolean.turn_off
        target:
            entity_id: input_boolean.light_simulation

  - alias: lights_indoor_attic_light_toggle
    id: lights_indoor_attic_light_toggle
    triggers:
      - trigger: state
        entity_id: binary_sensor.dachboden
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
    actions:
      - action: light.turn_{{ 'on' if trigger.to_state.state == 'on' else 'off' }}
        target:
            entity_id: light.shelly_dachboden

  - alias: lights_indoor_off_after_timeout
    id: lights_indoor_off_after_timeout
    triggers:
      - trigger: state
        entity_id:
          # - light.shelly_dusche
          # - light.shelly_bad
          - light.deckenlicht_bad
          - light.deckenlicht_dusche
          - light.shelly_treppe
          - light.shelly_flur
          - light.shelly_korridor
        to: "on"
        for:
            minutes: "{{ states ( 'input_number.light_timeout' ) | int }}"
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
      - condition: state
        entity_id: sun.sun
        state: 'above_horizon'
    actions:
      - action: light.turn_off
        target:
            entity_id: "{{ trigger.entity_id }}"

  - alias: lights_indoor_ikea_jetstrom
    id: lights_indoor_ikea_jetstrom
    triggers:
      - platform: state
        entity_id: 
          - binary_sensor.shelly_bad_input_0
          - binary_sensor.shelly_dusche_input_0
    variables:
        room: "{{ trigger.entity_id.split ( '_' ) [2] }}"
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
    actions:
      - action: light.turn_{{ 'on' if trigger.to_state.state == 'on' else 'off' }}
        target:
            entity_id: light.deckenlicht_{{ room }}

  - alias: lights_indoor_hall_on_at_opening_door
    id: lights_indoor_lights_on_at_opening_door
    triggers:
      - platform: state
        entity_id: binary_sensor.eingangstur
        to: "on"
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
    actions:
      - action: light.turn_on
        target:
            entity_id: light.shelly_flur

  # - alias: indoor_lights_desk_rgblamp_on
  #   id: indoor_lights_desk_rgblamp_on
  #   triggers:
  #     - platform: event
  #       event_type:  bosch_shc.event
  #       event_data:
  #           event_type: PRESS_SHORT
  #           event_subtype: UPPER_RIGHT_BUTTON
  #   conditions:
  #     - condition: state
  #       alias: process only on production server
  #       entity_id: binary_sensor.prod_mode
  #       state: "on"
  #   actions:
  #     - action: light.turn_on
  #       target:
  #         entity_id: light.ws2812_office
  #       data:
  #         brightness: "{{ states ( 'input_number.default_brightness' ) | int }}"
  #         rgb_color: [206, 252, 84]

  # - alias: indoor_lights_desk_rgblamp_off
  #   id: indoor_lights_desk_rgblamp_off
  #   triggers:
  #     - platform: event
  #       event_type:  bosch_shc.event
  #       event_data:
  #           event_type: PRESS_SHORT
  #           event_subtype: LOWER_RIGHT_BUTTON
  #   conditions:
  #     - condition: state
  #       alias: process only on production server
  #       entity_id: binary_sensor.prod_mode
  #       state: "on"
  #   actions:
  #     - action: light.turn_off
  #       target:
  #         entity_id: light.ws2812_office

  # - alias: indoor_lights_desk_rgblamp_brightness
  #   id: indoor_lights_desk_rgblamp_brightness
  #   triggers:
  #     - platform: event
  #       event_type:  bosch_shc.event
  #       event_data:
  #           event_type: PRESS_SHORT
  #           event_subtype: UPPER_LEFT_BUTTON
  #       variables:
  #           delta: +1
  #     - platform: event
  #       event_type:  bosch_shc.event
  #       event_data:
  #           event_type: PRESS_SHORT
  #           event_subtype: LOWER_LEFT_BUTTON
  #       variables:
  #           delta: -1
  #   conditions:
  #     - condition: state
  #       alias: process only on production server
  #       entity_id: binary_sensor.prod_mode
  #       state: "on"
  #     - condition: state
  #       alias: only when light is on
  #       entity_id: light.ws2812_office
  #       state: "on"
  #   actions:
  #     - action: light.turn_on
  #       target:
  #         entity_id: light.ws2812_office
  #       data:
  #         brightness: "{{ state_attr ( 'light.ws2812_office', 'brightness' ) | int + delta * states ( 'input_number.brightness_delta' ) | int }}"

  - alias: lights_bedroom_toggle
    id: lights_bedroom_toggle
    triggers:
      - trigger: state
        entity_id: binary_sensor.ttp223_bedroom_touch1
        to: "on"
      - trigger: state
        entity_id: binary_sensor.ttp223_bedroom_touch2
        to: "on"
      - trigger: state
        entity_id: binary_sensor.ttp223_bedroom_touch3
        to: "on"
      - trigger: state
        entity_id: binary_sensor.ttp223_bedroom_touch4
        to: "on"
    conditions:
      - condition: state
        entity_id: input_boolean.touch_bedroom_activated
        state: "on"
    actions:
      - action: light.toggle
        target:
            entity_id:
              - light.sonoff_bedroom_socket

  - alias: lights_kitchen_desk_toggle
    id: lights_kitchen_desk_toggle
    triggers:
      - trigger: state
        entity_id: binary_sensor.gesture_kitchen
        to: "on"
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
      - condition: state
        entity_id: input_boolean.gesture_kitchen_activated
        state: "on"
    actions:
      - if:
          - condition: or
            conditions:
              - condition: state
                entity_id: light.led_kitchen_led
                state: "off"
              - condition: and
                conditions:
                  - condition: state
                    entity_id: light.led_kitchen_led
                    state: "on"
                  - condition: template
                    value_template: '{{ states.light.led_kitchen_led.attributes.color_temp == 500 }}'
        then:
          - action: scene.turn_on
            target:
                entity_id: scene.kitchen_full_light
        else:
          - action: scene.turn_on
            target:
                entity_id: scene.kitchen_background_light
          - if:
              - condition: state
                entity_id: light.shelly_esszimmerschrank2
                state: "on"
                alias: check for night lights switched on
            then:
            else:
              - action: light.turn_off
                target:
                    entity_id: light.led_kitchen_led

  - alias: lights_kitchen_desk_on_by_motion
    id: lights_kitchen_desk_on_by_motion
    triggers:
      - trigger: state
        entity_id: binary_sensor.bewegungsmelder1
        to: "on"
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
      - condition: state
        entity_id: input_boolean.gesture_kitchen_activated
        state: "on"
      - condition: numeric_state
        entity_id: sensor.bewegungsmelder1_illuminance
        below: input_number.kitchen_desk_illuminance_threshold
    actions:
      - action: scene.turn_on
        target:
            entity_id: scene.kitchen_full_light

  - alias: lights_kitchen_desk_off_by_motion
    id: lights_kitchen_desk_off_by_motion
    triggers:
      - trigger: state
        entity_id: binary_sensor.bewegungsmelder1
        to: "off"
    conditions:
      - condition: state
        entity_id: input_boolean.gesture_kitchen_activated
        state: "on"
    actions:
      - action: scene.turn_on
        target:
            entity_id: scene.kitchen_background_light
      - if:
          - condition: state
            entity_id: light.shelly_esszimmerschrank2
            state: "on"
            alias: check for night lights switched on
        then:
        else:
          - action: light.turn_off
            target:
                entity_id: light.led_kitchen_led

  - alias: lights_outdoor_on_at_night
    id: lights_outdoor_on_at_night
    triggers:
      - trigger: sun
        event: sunset
        offset: "00:00:00"
      - trigger: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Außenlichter an'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
    actions:
      - action: light.turn_on
        target:
            entity_id:
              - light.automatic_outdoor_lights

  - alias: lights_outdoor_off_at_morning
    id: lights_outdoor_off_at_morning
    triggers:
      - trigger: sun
        event: sunrise
        offset: "+00:00:00"
      - trigger: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Außenlichter an'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: "on"
    actions:
      - action: light.turn_off
        target:
            entity_id:
              - light.automatic_outdoor_lights
