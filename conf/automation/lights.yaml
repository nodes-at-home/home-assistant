###
### 22.08.2019 split up
###

  - alias: send_effect_delay
    id: send_effect_delay
    trigger:
        platform: state
        entity_id: input_number.effect_delay
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
    action:
      - service: mqtt.publish
        data_template:
            topic: nodes@home/light/ws2812/terrace1/service/set
            payload: '{"delay":{{ trigger.to_state.state | int }}}'
            qos: 0
            retain: false
      - service: mqtt.publish
        data_template:
            topic: nodes@home/light/ws2812/terrace2/service/set
            payload: '{"delay":{{ trigger.to_state.state | int }}}'
            qos: 0
            retain: false
      - service: mqtt.publish
        data_template:
            topic: nodes@home/light/ws2812/office/service/set
            payload: '{"delay":{{ trigger.to_state.state | int }}}'
            qos: 0
            retain: false

  - alias: indoor_lights_on_at_coming_home_or_sunset
    id: indoor_lights_on_at_coming_home_or_sunset
    triggers:
      - platform: state
        entity_id: group.family
        to: 'home'
      - platform: sun
        event: sunset
        offset: "00:00:00"
      - platform: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Licht an'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: sun
        after: sunset
        after_offset: "00:00:00"
      - condition: time
        before: input_datetime.sleep
      - condition: or
        conditions:
          - condition: state
            entity_id: group.family
            state: 'home'
          - condition: state
            entity_id: input_boolean.light_simulation
            state: 'on'
    actions:
      - action: homeassistant.turn_on
        entity_id:
            - light.automatic_indoor_lights_immediatly_switched_off
            - light.automatic_indoor_lights_delayed_switched_off

  - alias: indoor_lights_by_night_on_at_coming_home
    id: indoor_lights_by_night_on_at_coming_home
    triggers:
      - platform: state
        entity_id: group.family
        to: 'home'
      - platform: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Licht an'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: sun
        after: sunset
        after_offset: "00:00:00"
      - condition: time
        after: input_datetime.sleep
        before: input_datetime.nightlight_end
      - condition: state
        entity_id: group.family
        state: 'home'
    actions:
      - service: homeassistant.turn_on
        entity_id:
            - light.automatic_indoor_lights_by_night
      - delay:
            minutes: "{{ states ( 'input_number.nightlight_duration' ) | int }}"
      - service: homeassistant.turn_off
        entity_id:
            - light.automatic_indoor_lights_by_night

  - alias: indoor_lights_off_at_getting_out_or_sunrise
    id: indoor_lights_off_at_getting_out_or_sunrise
    triggers:
      - platform: state
        entity_id: group.family
        to: 'not_home'
        for:
          minutes: 1
      - platform: sun
        event: sunrise
        offset: "+00:00:00"
      - platform: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Licht aus'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
    actions:
      - service: scene.turn_on
        entity_id: scene.kitchen_background_light
      - service: homeassistant.turn_off
        entity_id:
            - light.automatic_indoor_lights_immediatly_switched_off
            - light.automatic_indoor_lights_delayed_switched_off
            - light.automatic_indoor_lights_immediatly_switched_off_extra
            - light.automatic_indoor_lights_delayed_switched_off_extra
            - light.automatic_indoor_lights_sunrise_switched_off_extra

  - alias: indoor_lights_off_when_tv_switched_off
    id: indoor_lights_off_when_tv_switched_off
    triggers:
        platform: state
        entity_id: remote.sony_kd_55ag9
        from: "on"
        to: "off"
        for:
            minutes: 1
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: time
        after: input_datetime.tv_off_period_start
        before: input_datetime.tv_off_period_end
    actions:
      - delay:
            minutes: "{{ states ( 'input_number.tvoff_lightsoff_delay1' ) | int - 1 }}"
      - service: scene.turn_on
        entity_id: scene.kitchen_background_light
      - service: homeassistant.turn_off
        entity_id:
            - light.automatic_indoor_lights_immediatly_switched_off
            - light.automatic_indoor_lights_immediatly_switched_off_extra
      - delay:
            minutes: "{{ ( states ( 'input_number.tvoff_lightsoff_delay2' ) | int - states ( 'input_number.tvoff_lightsoff_delay1' ) | int ) }}"
      - service: homeassistant.turn_off
        entity_id:
            - light.automatic_indoor_lights_delayed_switched_off
            - light.automatic_indoor_lights_delayed_switched_off_extra

  - alias: indoor_lights_off_after_random_delay
    id: indoor_lights_off_after_random_delay
    triggers:
      - platform: time
        at: input_datetime.sleep
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: input_boolean.light_simulation
        state: 'on'
    actions:
      # switch off between 22:00 amd 24:00
      - delay:
            minutes: "{{ range ( 0,  states ( 'input_number.max_random_off_duration' ) | int ) | random | int }}"
      - service: scene.turn_on
        entity_id: scene.kitchen_background_light
      - service: homeassistant.turn_off
        entity_id:
            - light.automatic_indoor_lights_immediatly_switched_off
            - light.automatic_indoor_lights_delayed_switched_off
            - light.automatic_indoor_lights_immediatly_switched_off_extra
            - light.automatic_indoor_lights_delayed_switched_off_extra

  - alias: indoor_lights_simulation_off_at_coming_home
    id: indoor_lights_simulation_off_at_coming_home
    triggers:
      - platform: state
        entity_id: group.family
        to: 'home'
    conditions:
      - condition: state
        entity_id: input_boolean.light_simulation
        state: 'on'
    actions:
      - service: input_boolean.turn_off
        entity_id: input_boolean.light_simulation

  - alias: indoor_roof_light
    id: indoor_roof_light
    triggers:
      - platform: state
        entity_id: binary_sensor.dachboden
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
    actions:
      - service: light.turn_{{ trigger.to_state.state }}
        entity_id: light.shelly_roof_socket

  - alias: indoor_lights_shelly_off_after_timeout
    id: indoor_lights_shelly_off_after_timeout
    triggers:
      - platform: state
        entity_id:
          - light.shelly_shower_socket
          - light.shelly_bath_socket
          - light.shelly_treppe_switch_0
          - light.shelly_flur_switch_0
          - light.shelly_korridor_switch_0
        to: "on"
        for:
            minutes: "{{ states ( 'input_number.light_timeout' ) | int }}"
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: sun.sun
        state: 'above_horizon'
    actions:
      - action: light.turn_off
        target:
          entity_id: "{{ trigger.entity_id }}"

  - alias: indoor_lights_hall_on_at_opening_door
    id: indoor_lights_hall_on_at_opening_door
    triggers:
      - platform: state
        entity_id: binary_sensor.eingangstur
        to: "on"
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
    actions:
      - action: light.turn_on
        target:
          entity_id: light.shelly_flur_switch_0

  # - alias: indoor_lights_desk_rgblamp_on
  #   id: indoor_lights_desk_rgblamp_on
  #   triggers:
  #     - platform: event
  #       event_type:  bosch_shc.event
  #       event_data:
  #           event_type: PRESS_SHORT
  #           event_subtype: UPPER_RIGHT_BUTTON
  #   conditions:
  #     - condition: state
  #       alias: process only on production server
  #       entity_id: binary_sensor.prod_mode
  #       state: 'on'
  #   actions:
  #     - action: light.turn_on
  #       target:
  #         entity_id: light.ws2812_office
  #       data:
  #         brightness: "{{ states ( 'input_number.default_brightness' ) | int }}"
  #         rgb_color: [206, 252, 84]

  # - alias: indoor_lights_desk_rgblamp_off
  #   id: indoor_lights_desk_rgblamp_off
  #   triggers:
  #     - platform: event
  #       event_type:  bosch_shc.event
  #       event_data:
  #           event_type: PRESS_SHORT
  #           event_subtype: LOWER_RIGHT_BUTTON
  #   conditions:
  #     - condition: state
  #       alias: process only on production server
  #       entity_id: binary_sensor.prod_mode
  #       state: 'on'
  #   actions:
  #     - action: light.turn_off
  #       target:
  #         entity_id: light.ws2812_office

  # - alias: indoor_lights_desk_rgblamp_brightness
  #   id: indoor_lights_desk_rgblamp_brightness
  #   triggers:
  #     - platform: event
  #       event_type:  bosch_shc.event
  #       event_data:
  #           event_type: PRESS_SHORT
  #           event_subtype: UPPER_LEFT_BUTTON
  #       variables:
  #           delta: +1
  #     - platform: event
  #       event_type:  bosch_shc.event
  #       event_data:
  #           event_type: PRESS_SHORT
  #           event_subtype: LOWER_LEFT_BUTTON
  #       variables:
  #           delta: -1
  #   conditions:
  #     - condition: state
  #       alias: process only on production server
  #       entity_id: binary_sensor.prod_mode
  #       state: 'on'
  #     - condition: state
  #       alias: only when light is on
  #       entity_id: light.ws2812_office
  #       state: 'on'
  #   actions:
  #     - action: light.turn_on
  #       target:
  #         entity_id: light.ws2812_office
  #       data:
  #         brightness: "{{ state_attr ( 'light.ws2812_office', 'brightness' ) | int + delta * states ( 'input_number.brightness_delta' ) | int }}"

  - alias: bedroom_lights_toggle
    id: bedroom_lights_toggle
    trigger:
      - platform: state
        entity_id: binary_sensor.ttp223_bedroom_touch1
        to: 'on'
      - platform: state
        entity_id: binary_sensor.ttp223_bedroom_touch2
        to: 'on'
      - platform: state
        entity_id: binary_sensor.ttp223_bedroom_touch3
        to: 'on'
      - platform: state
        entity_id: binary_sensor.ttp223_bedroom_touch4
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.touch_bedroom_activated
        state: 'on'
    action:
      - service: light.toggle
        entity_id:
            - light.sonoff_bedroom_socket

  - alias: kitchen_desk_light_toggle
    id: kitchen_desk_light_toggle
    trigger:
      - platform: state
        entity_id: binary_sensor.gesture_kitchen
        to: 'on'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: input_boolean.gesture_kitchen_activated
        state: 'on'
    action:
      - if:
          - condition: or
            conditions:
              - condition: state
                entity_id: light.led_kitchen_led
                state: 'off'
              - condition: and
                conditions:
                  - condition: state
                    entity_id: light.led_kitchen_led
                    state: 'on'
                  - condition: template
                    value_template: '{{ states.light.led_kitchen_led.attributes.color_temp == 500 }}'
        then:
          - service: scene.turn_on
            entity_id: scene.kitchen_full_light
        else:
          - service: scene.turn_on
            entity_id: scene.kitchen_background_light
          - if:
              - condition: state
                entity_id: light.relay_dining1_lamp
                state: 'on'
                alias: check for night lights switched on
            then:
            else:
              - service: light.turn_off
                entity_id: light.led_kitchen_led

  - alias: kitchen_desk_light_on_by_motion
    id: kitchen_desk_light_on_by_motion
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder1
        to: 'on'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: input_boolean.gesture_kitchen_activated
        state: 'on'
      - condition: numeric_state
        entity_id: sensor.bewegungsmelder1_illuminance
        below: input_number.kitchen_desk_illuminance_threshold
    action:
      - service: scene.turn_on
        entity_id: scene.kitchen_full_light

  - alias: kitchen_desk_light_off_by_motion
    id: kitchen_desk_light_off_by_motion
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder1
        to: 'off'
    condition:
      - condition: state
        entity_id: input_boolean.gesture_kitchen_activated
        state: 'on'
    action:
      - service: scene.turn_on
        entity_id: scene.kitchen_background_light
      - if:
          - condition: state
            entity_id: light.relay_dining1_lamp
            state: 'on'
            alias: check for night lights switched on
        then:
        else:
          - service: light.turn_off
            entity_id: light.led_kitchen_led

  - alias: outdoor_lights_on_at_night
    id: outdoor_lights_on_at_night
    trigger:
      - platform: sun
        event: sunset
        offset: "00:00:00"
      - platform: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Außenlichter an'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
    action:
      - service: light.turn_on
        entity_id:
            - light.automatic_outdoor_lights

  - alias: outdoor_lights_off_at_morning
    id: outdoor_lights_off_at_morning
    trigger:
      - platform: sun
        event: sunrise
        offset: "+00:00:00"
      - platform: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Außenlichter an'
    conditions:
      - condition: state
        alias: process only on production server
        entity_id: binary_sensor.prod_mode
        state: 'on'
    action:
      - service: light.turn_off
        entity_id:
            - light.automatic_outdoor_lights
