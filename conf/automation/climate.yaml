###
### junand 06.06.2023
###

  - alias: climate_start
    id: climate_start
    trigger:
      - platform: time_pattern
        minutes: '/15'
      - platform: state
        entity_id: group.family_devices
        to: 'home'
      - platform: state
        entity_id: input_boolean.climate_activated
        to: 'on'
      - platform: state
        entity_id: input_number.climate_target_temperature
      - platform: state
        entity_id: input_number.climate_min_forecast_temperature
      - platform: state
        entity_id: input_number.climate_min_forecast_temperature_sunny
    condition:
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: input_boolean.climate_activated
        state: 'on'
      - condition: time
        after: input_datetime.climate_startperiode_begin
        before: input_datetime.climate_startperiode_end
      - condition: state
        entity_id: group.family_devices
        state: 'home'
      - or:
          - and:
              - not:
                  - condition: state
                    entity_id: sensor.openweathermap_forecast_condition
                    state: sunny
              - condition: numeric_state
                entity_id: sensor.openweathermap_forecast_temperature
                above: input_number.climate_min_forecast_temperature
          - and:
              - condition: state
                entity_id: sensor.openweathermap_forecast_condition
                state: sunny
              - condition: numeric_state
                entity_id: sensor.openweathermap_forecast_temperature
                above: input_number.climate_min_forecast_temperature_sunny
      - condition: numeric_state
        entity_id: sensor.sh10rt_master_battery_level
        above: input_number.climate_min_battery_level
    action:
      - repeat:
            for_each:
              - office
              - bedroom
              - nursery
            sequence:
              - if:
                  - condition: template
                    value_template: >
                        {# start only climates which are permitted and not running #}
                        {{
                            states ( 'input_boolean.climate_start_' + repeat.item ) == 'on'
                            and states ( 'input_boolean.climate_' + repeat.item + '_started' ) == 'off'
                            and states ( 'climate.' + repeat.item ) == 'off'
                        }}
                then:
                  - service: input_boolean.turn_on
                    data:
                        entity_id: "{{ 'input_boolean.climate_' + repeat.item + '_started' }}"
                  # seting hvac mode swuitches on the climate device; torn_on sets heat_cool mode!!!
                  - service: climate.set_hvac_mode
                    target:
                        entity_id: "climate.{{ repeat.item }}"
                    data:
                        hvac_mode: "{{ states ( 'input_select.climate_hvac_mode' ) }}"
                    # setting temperature needs a runnung climate device
                  - service: script.climate_set_temperature
                    data:
                      device: "{{ repeat.item }}"
                  - service: climate.set_fan_mode
                    target:
                        entity_id: "climate.{{ repeat.item }}"
                    data:
                        fan_mode: "{{ states ( 'input_select.climate_fan_mode' ) }}"
                  - service: climate.set_swing_mode
                    target:
                        entity_id: "climate.{{ repeat.item }}"
                    data:
                        swing_mode: "{{ states ( 'input_select.climate_swing_mode' ) }}"
                  - service: climate.set_preset_mode
                    target:
                        entity_id: "climate.{{ repeat.item }}"
                    data:
                        preset_mode: "{{ states ( 'input_select.climate_preset_mode' ) }}"

  - alias: climate_supervise_temperature
    id: climate_supervise_temperature
    trigger:
      - platform: state
        entity_id: climate.office
        attribute: current_temperature
        variables:
            device: office
      - platform: state
        entity_id: climate.bedroom
        attribute: current_temperature
        variables:
            device: bedroom
      - platform: state
        entity_id: climate.nursery
        attribute: current_temperature
        variables:
            device: nursery
    condition:
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: template
        value_template: "{{ states ( 'input_boolean.climate_' + device + '_started' ) == 'on' }}"
      - condition: state
        entity_id: input_boolean.climate_activated
        state: 'on'
    action:
      - if:
          - condition: template
            value_template: "{{ states ( 'climate.' + device ) != 'off' }}"
        then:
          - service: script.climate_set_temperature
            data:
              device: "{{ device }}"

  - alias: climate_target_temperature
    id: climate_target_temperature
    trigger:
      - platform: state
        entity_id: input_number.climate_target_temperature
    condition:
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: input_boolean.climate_activated
        state: 'on'
    action:
      - repeat:
            for_each:
              - office
              - bedroom
              - nursery
            sequence:
              - if:
                  - condition: template
                    value_template: "{{ states ( 'climate.' + repeat.item ) != 'off' }}"
                then:
                  - service: script.climate_set_temperature
                    data:
                      device: "{{ repeat.item }}"

  - alias: climate_turn_off
    id: climate_turn_off
    trigger:
      - platform: numeric_state
        entity_id: sensor.total_dc_power
        below: input_number.climate_min_pv_generation
        for: 
            minutes: "{{ states ( 'input_number.climate_min_pv_generation_duration' ) }}"
        variables:
            immediate_turn_off: false
      - platform: state
        entity_id: group.family_devices
        to: 'not_home'
        variables:
            immediate_turn_off: true
    condition:
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: input_boolean.climate_activated
        state: 'on'
    action:
      - repeat:
            for_each:
              - office
              - bedroom
              - nursery
            sequence:
              - if:
                  - condition: template
                    value_template: >
                        {{
                            immediate_turn_off
                            or (
                                states ( 'input_boolean.climate_' + repeat.item + '_started' ) == 'on'
                                and states ( 'input_boolean.climate_stop_' + repeat.item ) == 'on'
                            )
                            and states ( 'climate.' + repeat.item ) != 'off'
                        }}
                then:
                  - service: input_boolean.turn_off
                    data:
                        entity_id: "{{ 'input_boolean.climate_' + repeat.item + '_started' }}"
                  - service: climate.turn_off
                    target:
                        entity_id: "climate.{{ repeat.item }}"

  - alias: climate_night_mode
    id: climate_night_mode
    trigger:
        platform: state
        entity_id: remote.sony_bravia_tv
        from: "on"
        to: "off"
        for:
            minutes: 1
    condition:
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: input_boolean.climate_activated
        state: 'on'
    action:
      - repeat:
            for_each:
              - office
              - bedroom
              - nursery
            sequence:
              - if:
                  - condition: template
                    value_template: >
                        {{
                            states ( 'input_boolean.climate_' + repeat.item + '_started' ) == 'on'
                            and states ( 'input_boolean.climate_stop_' + repeat.item ) == 'on'
                            and states ( 'climate.' + repeat.item ) != 'off'
                        }}
                then:
                  - service: climate.set_preset_mode
                    target:
                        entity_id: "climate.{{ repeat.item }}"
                    data:
                        preset_mode: sleep
