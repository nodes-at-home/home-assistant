###
### 25.05.2025
###

  - alias: locks_open_entry_door
    id: locks_open_entry_door
    triggers:
      - trigger: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Eingangst端r auf'
    conditions:
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: binary_sensor.eingangstur
        state: "off"
    actions:
      - action: lock.open
        target:
            entity_id: lock.eingangstur

  - alias: locks_open_garage_door
    id: locks_open_garage_door
    triggers:
      - trigger: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Garagent端r auf'
    conditions:
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: binary_sensor.garagentur
        state: "off"
    actions:
      - action: lock.open
        target:
            entity_id: lock.garagentur

  - alias: locks_open_postern_door
    id: locks_open_postern_door
    triggers:
      - trigger: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Nebent端r auf'
    conditions:
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
      - condition: state
        entity_id: binary_sensor.nebentur
        state: "off"
    actions:
      - action: lock.open
        target:
            entity_id: lock.nebentur

  - alias: locks_lock_up_all_doors
    id: locks_lock_up_all_doors
    triggers:
      - trigger: event
        event_type:  bosch_shc.event
        event_data:
            event_type: SCENARIO
            event_subtype: 'Abschliessen'
    conditions:
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
    actions:
      - repeat:
          for_each:
            - eingangstur
            - nebentur
            - garagentur
          sequence:
            - if:
                - condition: template
                  value_template: "{{ states ( 'binary_sensor.' + repeat.item ) == 'on' }}"
              then:
                - action: script.notify
                  data:
                      domain: "doorlocks"
                      message: "{{ state_attr ( 'binary_sensor.' + repeat.item, 'friendly_name' ) }} konnte nicht abgeschlossen werden, da diese offen ist."
              else:
                - if:
                    - condition: template
                      value_template: "{{ states ( 'lock.' + repeat.item ) in ( 'unknown', 'unavailable' ) }}"
                  then:
                    - action: script.notify
                      data:
                          domain: "doorlocks"
                          message: "{{ state_attr ( 'binary_sensor.' + repeat.item, 'friendly_name' ) }} konnte nicht abgeschlossen werden, da kein Schloss verf端gbar ist."
                  else:
                    - action: lock.lock
                      target:
                          entity_id: "lock.{{ repeat.item }}"
