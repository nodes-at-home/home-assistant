###
### 13.03.2021 new
###

  - alias: mower_start
    id: mower_start
    triggers:
      - trigger: time
        at: input_datetime.mowing_start
    conditions:
        # check stage
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
        # check manual flag
      - condition: state
        entity_id: input_boolean.mowing_activated
        state: 'on'
      - condition: template
        value_template: >
            {% set day = now().weekday() %}
            {{
               day == 0 and states ( 'input_boolean.mowing_at_monday' )    == 'on' or
               day == 1 and states ( 'input_boolean.mowing_at_tuesday' )   == 'on' or
               day == 2 and states ( 'input_boolean.mowing_at_wednesday' ) == 'on' or
               day == 3 and states ( 'input_boolean.mowing_at_thursday' )  == 'on' or
               day == 4 and states ( 'input_boolean.mowing_at_friday' )    == 'on' or
               day == 5 and states ( 'input_boolean.mowing_at_saturday' )  == 'on' or
               day == 6 and states ( 'input_boolean.mowing_at_sunday' )    == 'on'
            }}
    actions:
      - action: gardena_smart_system.start_override
        target:
            entity_id: lawn_mower.sileno
        data:
            duration: "{{ ( as_timestamp ( today_at ( states ( 'input_datetime.mowing_end' ) ) ) - as_timestamp ( today_at ( states ( 'input_datetime.mowing_start' ) ) ) ) | int }}"

  - alias: mower_end
    id: mower_end
    triggers:
      - trigger: time
        at: input_datetime.mowing_end
    conditions:
        # check stage
      - condition: state
        entity_id: binary_sensor.prod_mode
        state: 'on'
    action:
      - service: lawn_mower.pause
        entity_id: lawn_mower.sileno
